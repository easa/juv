version: 2

aliases:
  - &restore-cache
    keys:
      - v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
      # fallback to using the latest cache if no exact match is found in case checksum fails
      - v1-dependencies-{{ .Branch }}-
  - &save-cache
    paths:
      - node_modules
    key: v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
  - &install npm install

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10.16.0

jobs:
  lint-and-typecheck:
    <<: *defaults
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: *install
      - save-cache: *save-cache
      - run:
          command: npm run lint
      - store_test_results:
          path: reports/

  build-node-latest:
    <<: *defaults
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: *install
      - save-cache: *save-cache
      - run:
          command: npm start
      - store_test_results:
          path: reports/

  test-jest-circus:
    <<: *defaults
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: *install
      - save-cache: *save-cache
      - run:
          command: npm run test
      - store_test_results:
          path: reports/

  publish-npm:
    <<: *defaults
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: *install
      - save-cache: *save-cache
      - run:
          name: Publish to NPM
          command: |
            if [ $CIRCLE_BRANCH == "master" ]; then
              npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
              npm publish
              echo "Publish on $CIRCLE_BRANCH to npm!"
            else 
              echo "Only master branch gonna publish, It's on $CIRCLE_BRANCH now!"
            fi

# Workflows enables us to run multiple jobs in parallel
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - lint-and-typecheck
      - build-node-latest
      - test-jest-circus
  # This will update the package.json file and creates a tagged Git commit. Next, push the commit with tags
  tagged-build:
    jobs:
      - publish-npm:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/

# Notification WebHooks which send the test result data to a remote server.
notify:
  webhooks:
    # A list of hook hashes, containing the url field
    # gitter hook
    - url: https://webhooks.gitter.im/e/$GITTER_TOKEN
